<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Start dragging
if (mouse_check_button_pressed(mb_left) &amp;&amp; position_meeting(mouse_x, mouse_y, id)) {
    is_dragging = true;
}

// Stop dragging
if (mouse_check_button_released(mb_left)) {
    is_dragging = false;

    // Check if dropped in the correct drop zone
    if (instance_exists(target_drop_zone)) {
        var box = instance_nearest(x, y, target_drop_zone);

        // Define drop zone area
        var drop_area_width = 100;
        var drop_area_height = 100;

        // Check for overlap
        if (mouse_x &gt; box.x - drop_area_width / 2 &amp;&amp;
            mouse_x &lt; box.x + drop_area_width / 2 &amp;&amp;
            mouse_y &gt; box.y - drop_area_height / 2 &amp;&amp;
            mouse_y &lt; box.y + drop_area_height / 2) {
            x = box.x;
            y = box.y;
            show_message("Correct!");  // Feedback for correct placement
        } else {
            x = original_x;
            y = original_y;
            show_message("Try again!");
        }
    }
}

// Dragging behavior
if (is_dragging) {
    x = mouse_x;
    y = mouse_y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
